AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
# create a function and API gateway to return hello world

#Input parameters - specify these at run-time
#Parameters:
#    someparameter:
#        Type: String

# global variable definitions
Globals:
  Function:
    Runtime: python3.6
    Timeout: 10

Resources:
  # helloworld function
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: aacorne-samTemplate-helloworld
      Description: aacorne-helloworld
      Handler: helloworld.lambda_handler
      Role: !GetAtt LambdaFunctionRole.Arn
      AutoPublishAlias: prod
      # CodeUri: ./
      InlineCode: |
        def lambda_handler(event, context):
          print("hello world 3")
      Tags:
          Owner: aacorne
          Status: active
          Environment: development
          Name: aacorne-helloworld

  # Lambda role
  LambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ["sts:AssumeRole"]
          Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
        Version: "2012-10-17"
      Path: /
      Policies:
        - PolicyName: !Sub "aacorne-lambda-${AWS::StackName}"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: CloudWatchLogs
                Effect: Allow
                Action:
                - cloudwatch:PutMetricData
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                Resource: "*"